---
- name: X2Go Server Library Item Automation Script
  hosts: "{{ host_name }}"
  become: true
  become_user: root
  become_method: sudo
  
  tasks:
  
  - name: yum install --> epel
    yum:
     name: epel-release
     state: latest
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat' 

  - name: yum install --> x2go with mate-desktop
    shell: |
     yum groupinstall mate-desktop -y
     yum install x2goserver-xsession -y
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat' 

  - name: apt install --> x2go with mate-desktop
    apt:
     name: 
     - mate-core 
     - mate-desktop-environment 
     - mate-notification-daemon
     - x2goserver
     - x2goserver-xsession
     - fail2ban
    when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian' 
    
  - name: install --> required software
    yum:
     name: 
      - firewalld
      - fail2ban
     state: latest
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat' 

  - name: ssh => enable password authentication
    lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PasswordAuthentication"
              line="PasswordAuthentication yes"
              state=present

  - name: ssh => disallow root SSH access
    lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PermitRootLogin"
              line="PermitRootLogin no"
              state=present

  - name: create => /etc/fail2ban/jail.d/ssh.conf 
    file:
        path: /etc/fail2ban/jail.d/ssh.conf
        state: touch
        mode: u=rw,g=r,o=r


  - name: edit => /etc/fail2ban/jail.d/ssh.conf
    lineinfile:
        path: /etc/fail2ban/jail.d/ssh.conf
        line: |
         [sshd]
         enabled=true
         # don't block localhost or local machines
         ignoreip=127.0.0.1/8 10.0.0.0/8 
        insertbefore: BOF

  - name: firewalld => enable & restart
    service:
     name: firewalld
     state: restarted
     enabled: yes
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat' 
    
  - name: fail2ban => enable & restart
    service:
     name: fail2ban
     state: restarted
     enabled: yes
